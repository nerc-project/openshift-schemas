{
  "apiVersion": "org.openapis.spec/v3",
  "kind": "OpenAPISchema",
  "metadata": {
    "name": "com.ansible.eda.v1alpha1.EDA",
    "annotations": {
      "source-cluster": "nerc-ocp-prod"
    }
  },
  "definitions": {
    "com.ansible.eda.v1alpha1.EDA": {
      "description": "EDA is the Schema for the edas API",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "description": "Spec defines the desired state of EDA",
          "required": [
            "automation_server_url"
          ],
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "description": "Status defines the observed state of EDA",
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "eda.ansible.com",
          "kind": "EDA",
          "version": "v1alpha1"
        }
      ]
    }
  }
}
