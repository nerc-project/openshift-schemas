{
  "apiVersion": "org.openapis.spec/v3",
  "kind": "OpenAPISchema",
  "metadata": {
    "name": "com.github.openshift.api.image.v1.ImageStreamTag",
    "annotations": {
      "source-cluster": "nerc-ocp-prod"
    }
  },
  "definitions": {
    "com.github.openshift.api.image.v1.ImageStreamTag": {
      "description": "ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream. Use this resource to interact with the tags and images in an image stream by tag, or to see the image details for a particular tag. The image associated with this resource is the most recently successfully tagged, imported, or pushed image (as described in the image stream status.tags.items list for this tag). If an import is in progress or has failed the previous image will be shown. Deleting an image stream tag clears both the status and spec fields of an image stream. If no image can be retrieved for a given tag, a not found error will be returned.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "conditions": {
          "description": "conditions is an array of conditions that apply to the image stream tag.",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.TagEventCondition"
          },
          "type": "array"
        },
        "generation": {
          "description": "generation is the current generation of the tagged image - if tag is provided and this value is not equal to the tag generation, a user has requested an import that has not completed, or conditions will be filled out indicating any error.",
          "format": "int64",
          "type": "integer"
        },
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image",
          "description": "image associated with the ImageStream and tag."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "lookupPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageLookupPolicy",
          "description": "lookupPolicy indicates whether this tag will handle image references in this namespace."
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "tag": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReference",
          "description": "tag is the spec tag associated with this image stream tag, and it may be null if only pushes have occurred to this image stream."
        }
      },
      "required": [
        "tag",
        "generation",
        "lookupPolicy",
        "image"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamTag",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamTag",
          "version": "v1"
        }
      ]
    }
  }
}
