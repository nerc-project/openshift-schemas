{
  "apiVersion": "org.openapis.spec/v3",
  "kind": "OpenAPISchema",
  "metadata": {
    "name": "io.openshift.logging.v1.ClusterLogging",
    "annotations": {
      "source-cluster": "nerc-ocp-prod"
    }
  },
  "definitions": {
    "io.openshift.logging.v1.ClusterLogging": {
      "description": "A Red Hat OpenShift Logging instance. ClusterLogging is the Schema for the clusterloggings API",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "description": "Specification of the desired behavior of ClusterLogging",
          "properties": {
            "collection": {
              "description": "Specification of the Collection component for the cluster"
            },
            "curation": {
              "description": "Deprecated. Specification of the Curation component for the cluster This component was specifically for use with Elasticsearch and was replaced by index management spec",
              "required": [
                "type"
              ]
            },
            "forwarder": {
              "description": "Deprecated. Specification for Forwarder component for the cluster See spec.collection.fluentd"
            },
            "logStore": {
              "description": "Specification of the Log Storage component for the cluster",
              "required": [
                "type"
              ]
            },
            "managementState": {
              "description": "Indicator if the resource is 'Managed' or 'Unmanaged' by the operator",
              "enum": [
                "Managed",
                "Unmanaged"
              ],
              "type": "string"
            },
            "visualization": {
              "description": "Specification of the Visualization component for the cluster",
              "required": [
                "type"
              ]
            }
          },
          "type": "object"
        },
        "status": {
          "description": "Status defines the observed state of ClusterLogging",
          "properties": {
            "collection": {
              "description": "Deprecated."
            },
            "conditions": {
              "description": "Conditions is a set of Condition instances.",
              "items": {
                "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.",
                "properties": {
                  "lastTransitionTime": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "reason": {
                    "description": "ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.",
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "description": "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".",
                    "type": "string"
                  }
                },
                "required": [
                  "status",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "curation": {
              "properties": {
                "curatorStatus": {
                  "items": {
                    "properties": {
                      "clusterCondition": {
                        "additionalProperties": {
                          "description": "`operator-sdk generate crds` does not allow map-of-slice, must use a named type.",
                          "items": {
                            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.",
                            "properties": {
                              "lastTransitionTime": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "description": "ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "description": "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": "object"
                      },
                      "cronJobs": {
                        "type": "string"
                      },
                      "schedules": {
                        "type": "string"
                      },
                      "suspended": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "logStore": {
              "properties": {
                "elasticsearchStatus": {
                  "items": {
                    "properties": {
                      "cluster": {
                        "properties": {
                          "activePrimaryShards": {
                            "description": "The number of Active Primary Shards for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "activeShards": {
                            "description": "The number of Active Shards for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "initializingShards": {
                            "description": "The number of Initializing Shards for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "numDataNodes": {
                            "description": "The number of Data Nodes for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "numNodes": {
                            "description": "The number of Nodes for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "pendingTasks": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "relocatingShards": {
                            "description": "The number of Relocating Shards for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          },
                          "status": {
                            "description": "The current Status of the Elasticsearch Cluster",
                            "type": "string"
                          },
                          "unassignedShards": {
                            "description": "The number of Unassigned Shards for the Elasticsearch Cluster",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "activePrimaryShards",
                          "activeShards",
                          "initializingShards",
                          "numDataNodes",
                          "numNodes",
                          "pendingTasks",
                          "relocatingShards",
                          "status",
                          "unassignedShards"
                        ],
                        "type": "object"
                      },
                      "clusterConditions": {
                        "items": {
                          "properties": {
                            "lastTransitionTime": {
                              "description": "Last time the condition transitioned from one status to another.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human-readable message indicating details about last transition.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "type": {
                              "description": "ClusterConditionType is a valid value for ClusterCondition.Type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "lastTransitionTime",
                            "status",
                            "type"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "clusterHealth": {
                        "type": "string"
                      },
                      "clusterName": {
                        "type": "string"
                      },
                      "deployments": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "nodeConditions": {
                        "additionalProperties": {
                          "items": {
                            "properties": {
                              "lastTransitionTime": {
                                "description": "Last time the condition transitioned from one status to another.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Human-readable message indicating details about last transition.",
                                "type": "string"
                              },
                              "reason": {
                                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "description": "ClusterConditionType is a valid value for ClusterCondition.Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "lastTransitionTime",
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": "object"
                      },
                      "nodeCount": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "pods": {
                        "additionalProperties": {
                          "additionalProperties": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "type": "object"
                        },
                        "type": "object"
                      },
                      "replicaSets": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "shardAllocationEnabled": {
                        "type": "string"
                      },
                      "statefulSets": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "visualization": {
              "properties": {
                "kibanaStatus": {
                  "items": {
                    "description": "KibanaStatus defines the observed state of Kibana",
                    "properties": {
                      "clusterCondition": {
                        "additionalProperties": {
                          "items": {
                            "properties": {
                              "lastTransitionTime": {
                                "description": "Last time the condition transitioned from one status to another.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Human-readable message indicating details about last transition.",
                                "type": "string"
                              },
                              "reason": {
                                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "description": "ClusterConditionType is a valid value for ClusterCondition.Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "lastTransitionTime",
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": "object"
                      },
                      "deployment": {
                        "type": "string"
                      },
                      "pods": {
                        "additionalProperties": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "description": "The status for each of the Kibana pods for the Visualization component",
                        "type": "object"
                      },
                      "replicaSets": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "replicas": {
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "logging.openshift.io",
          "kind": "ClusterLogging",
          "version": "v1"
        }
      ]
    }
  }
}
