{
  "apiVersion": "org.openapis.spec/v3",
  "kind": "OpenAPISchema",
  "metadata": {
    "name": "io.amq.broker.v2alpha4.ActiveMQArtemis",
    "annotations": {
      "source-cluster": "nerc-ocp-prod"
    }
  },
  "definitions": {
    "io.amq.broker.v2alpha4.ActiveMQArtemis": {
      "description": "ActiveMQArtemis is the Schema for the activemqartemises API",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "description": "ActiveMQArtemisSpec defines the desired state of ActiveMQArtemis",
          "properties": {
            "acceptors": {
              "items": {
                "properties": {
                  "amqpMinLargeMessageSize": {
                    "type": "integer"
                  },
                  "anycastPrefix": {
                    "type": "string"
                  },
                  "connectionsAllowed": {
                    "type": "integer"
                  },
                  "enabledCipherSuites": {
                    "type": "string"
                  },
                  "enabledProtocols": {
                    "type": "string"
                  },
                  "expose": {
                    "type": "boolean"
                  },
                  "multicastPrefix": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "needClientAuth": {
                    "type": "boolean"
                  },
                  "port": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "protocols": {
                    "type": "string"
                  },
                  "sniHost": {
                    "type": "string"
                  },
                  "sslEnabled": {
                    "type": "boolean"
                  },
                  "sslProvider": {
                    "type": "string"
                  },
                  "sslSecret": {
                    "type": "string"
                  },
                  "verifyHost": {
                    "type": "boolean"
                  },
                  "wantClientAuth": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "addressSettings": {
              "properties": {
                "addressSetting": {
                  "items": {
                    "properties": {
                      "addressFullPolicy": {
                        "type": "string"
                      },
                      "autoCreateAddresses": {
                        "type": "boolean"
                      },
                      "autoCreateDeadLetterResources": {
                        "type": "boolean"
                      },
                      "autoCreateExpiryResources": {
                        "type": "boolean"
                      },
                      "autoCreateJmsQueues": {
                        "type": "boolean"
                      },
                      "autoCreateJmsTopics": {
                        "type": "boolean"
                      },
                      "autoCreateQueues": {
                        "type": "boolean"
                      },
                      "autoDeleteAddresses": {
                        "type": "boolean"
                      },
                      "autoDeleteAddressesDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "autoDeleteCreatedQueues": {
                        "type": "boolean"
                      },
                      "autoDeleteJmsQueues": {
                        "type": "boolean"
                      },
                      "autoDeleteJmsTopics": {
                        "type": "boolean"
                      },
                      "autoDeleteQueues": {
                        "type": "boolean"
                      },
                      "autoDeleteQueuesDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "autoDeleteQueuesMessageCount": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "configDeleteAddresses": {
                        "type": "string"
                      },
                      "configDeleteQueues": {
                        "type": "string"
                      },
                      "deadLetterAddress": {
                        "type": "string"
                      },
                      "deadLetterQueuePrefix": {
                        "type": "string"
                      },
                      "deadLetterQueueSuffix": {
                        "type": "string"
                      },
                      "defaultAddressRoutingType": {
                        "type": "string"
                      },
                      "defaultConsumerWindowSize": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "defaultConsumersBeforeDispatch": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "defaultDelayBeforeDispatch": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "defaultExclusiveQueue": {
                        "type": "boolean"
                      },
                      "defaultGroupBuckets": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "defaultGroupFirstKey": {
                        "type": "string"
                      },
                      "defaultGroupRebalance": {
                        "type": "boolean"
                      },
                      "defaultGroupRebalancePauseDispatch": {
                        "type": "boolean"
                      },
                      "defaultLastValueKey": {
                        "type": "string"
                      },
                      "defaultLastValueQueue": {
                        "type": "boolean"
                      },
                      "defaultMaxConsumers": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "defaultNonDestructive": {
                        "type": "boolean"
                      },
                      "defaultPurgeOnNoConsumers": {
                        "type": "boolean"
                      },
                      "defaultQueueRoutingType": {
                        "type": "string"
                      },
                      "defaultRingSize": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "enableMetrics": {
                        "type": "boolean"
                      },
                      "expiryAddress": {
                        "type": "string"
                      },
                      "expiryDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "expiryQueuePrefix": {
                        "type": "string"
                      },
                      "expiryQueueSuffix": {
                        "type": "string"
                      },
                      "lastValueQueue": {
                        "type": "boolean"
                      },
                      "managementBrowsePageSize": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "match": {
                        "type": "string"
                      },
                      "maxDeliveryAttempts": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "maxExpiryDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "maxRedeliveryDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "maxSizeBytes": {
                        "type": "string"
                      },
                      "maxSizeBytesRejectThreshold": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "messageCounterHistoryDayLimit": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "minExpiryDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "pageMaxCacheSize": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "pageSizeBytes": {
                        "type": "string"
                      },
                      "redeliveryCollisionAvoidanceFactor": {
                        "type": "number"
                      },
                      "redeliveryDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "redeliveryDelayMultiplier": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "redistributionDelay": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "retroactiveMessageCount": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "sendToDlaOnNoRoute": {
                        "type": "boolean"
                      },
                      "slowConsumerCheckPeriod": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "slowConsumerPolicy": {
                        "type": "string"
                      },
                      "slowConsumerThreshold": {
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "applyRule": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "adminPassword": {
              "type": "string"
            },
            "adminUser": {
              "type": "string"
            },
            "connectors": {
              "items": {
                "properties": {
                  "enabledCipherSuites": {
                    "type": "string"
                  },
                  "enabledProtocols": {
                    "type": "string"
                  },
                  "expose": {
                    "type": "boolean"
                  },
                  "host": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "needClientAuth": {
                    "type": "boolean"
                  },
                  "port": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "sniHost": {
                    "type": "string"
                  },
                  "sslEnabled": {
                    "type": "boolean"
                  },
                  "sslProvider": {
                    "type": "string"
                  },
                  "sslSecret": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "verifyHost": {
                    "type": "boolean"
                  },
                  "wantClientAuth": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "host",
                  "name",
                  "port"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "console": {
              "properties": {
                "expose": {
                  "type": "boolean"
                },
                "sslEnabled": {
                  "type": "boolean"
                },
                "sslSecret": {
                  "type": "string"
                },
                "useClientAuth": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "deploymentPlan": {
              "properties": {
                "image": {
                  "type": "string"
                },
                "initImage": {
                  "type": "string"
                },
                "jolokiaAgentEnabled": {
                  "type": "boolean"
                },
                "journalType": {
                  "type": "string"
                },
                "managementRBACEnabled": {
                  "type": "boolean"
                },
                "messageMigration": {
                  "type": "boolean"
                },
                "persistenceEnabled": {
                  "type": "boolean"
                },
                "requireLogin": {
                  "type": "boolean"
                },
                "resources": {
                  "description": "ResourceRequirements describes the compute resource requirements.",
                  "properties": {
                    "limits": {
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "storage": {
                  "properties": {
                    "size": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "upgrades": {
              "description": "ActiveMQArtemis App product upgrade flags",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "minor": {
                  "type": "boolean"
                }
              },
              "required": [
                "enabled",
                "minor"
              ],
              "type": "object"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "status": {
          "description": "ActiveMQArtemisStatus defines the observed state of ActiveMQArtemis",
          "properties": {
            "podStatus": {
              "properties": {
                "ready": {
                  "description": "Deployments are ready to serve requests",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "starting": {
                  "description": "Deployments are starting, may or may not succeed",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "stopped": {
                  "description": "Deployments are not starting, unclear what next step will be",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "podStatus"
          ],
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "broker.amq.io",
          "kind": "ActiveMQArtemis",
          "version": "v2alpha4"
        }
      ]
    }
  }
}
