{
  "apiVersion": "org.openapis.spec/v3",
  "kind": "OpenAPISchema",
  "metadata": {
    "name": "io.nmstate.v1alpha1.NodeNetworkConfigurationEnactment",
    "annotations": {
      "source-cluster": "nerc-ocp-prod"
    }
  },
  "definitions": {
    "io.nmstate.v1alpha1.NodeNetworkConfigurationEnactment": {
      "description": "NodeNetworkConfigurationEnactment is the Schema for the nodenetworkconfigurationenactments API",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "status": {
          "description": "NodeNetworkConfigurationEnactmentStatus defines the observed state of NodeNetworkConfigurationEnactment",
          "properties": {
            "capturedStates": {
              "additionalProperties": {
                "properties": {
                  "metaInfo": {
                    "properties": {
                      "time": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "type": "object"
              },
              "description": "A cache containing the resolved captures after processing the capture at NNCP",
              "type": "object"
            },
            "conditions": {
              "items": {
                "properties": {
                  "lastHeartbeatTime": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "status",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "desiredState": {
              "description": "The desired state rendered for the enactment's node using the policy desiredState as template",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "desiredStateMetaInfo": {
              "properties": {
                "time": {
                  "format": "date-time",
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "policyGeneration": {
              "description": "The generation from policy needed to check if an enactment condition status belongs to the same policy version",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "nmstate.io",
          "kind": "NodeNetworkConfigurationEnactment",
          "version": "v1alpha1"
        }
      ]
    }
  }
}
